test/hashMap :

stack #include
valueIO #include
core #import
hashMap #include
hashMap #import

{ 1 2 3 } hashCode println
{ 1 2 3 } hashCode println

4 int string newHashMap int string HashMap map =:
"put:" println
map 0 "0" HashMap.put println
map 1 "1" HashMap.put println
map 2 "2" HashMap.put println
map 3 "3" HashMap.put println
map 4 "4" HashMap.put println
map 5 "5" HashMap.put println
map 6 "6" HashMap.put println
map 7 "7" HashMap.put println
map 0 "8" HashMap.put println
map 3 "9" HashMap.put println
"contains:" println
map 1 HashMap.contains println
map 9 HashMap.contains println
"get:" println
map 0 HashMap.get println
map 2 HashMap.get println
map 4 HashMap.get println
map 8 HashMap.get println
"remove:" println
map 1 HashMap.remove println
map 3 HashMap.remove println
map 5 HashMap.remove println
map 9 HashMap.remove println
"map:" println

map HashMap.itr
while HashMapItr.next do
   int string MapEntry e =:
   { e MapEntry.key e MapEntry.value } "(%i,%s) " printf
end drop