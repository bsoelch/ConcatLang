tests/lib/list:

list #include
core #import

4 int newList x =::

x 1 << 2 << 3 << 4 << 5 << 6 << 7 << debugPrint
x offset   debugPrint
x capacity debugPrint
8 7 6 5 4 3 2 1 0 x >> >> >> >> >> >> >> >> >> debugPrint
x offset   debugPrint
x capacity debugPrint
42 x 10 []=
x debugPrint
x 5 [] debugPrint
"___________________________________" debugPrint
-43 x 2 4 fill
x debugPrint
x offset   debugPrint
x capacity debugPrint
64 x .ensureCap
x debugPrint
x offset   debugPrint
x capacity debugPrint
"___________________________________" debugPrint
4 int newList y =::
y  1 << 2 << 3 << 4 << debugPrint
y offset   debugPrint
y capacity debugPrint
y y <<* debugPrint
y offset   debugPrint
y capacity debugPrint
4 int newList z =::
z -3 << -2 << -1 << 0 << debugPrint
z y *>> debugPrint
y offset   debugPrint
y capacity debugPrint
"___________________________________" debugPrint
x 7 12 [:] slice =::
slice 0 [] debugPrint
-12 slice 1 3 fill
-13 slice 4 []=
slice debugPrint
slice 2 5 [:] debugPrint
"___________________________________" debugPrint
z debugPrint
z offset   debugPrint
z capacity debugPrint
1 z 3 insert
z debugPrint
z offset   debugPrint
z capacity debugPrint
2 z 0 insert
z debugPrint
z offset   debugPrint
z capacity debugPrint
3 z z length insert
z debugPrint
z offset   debugPrint
z capacity debugPrint

z z 2 insertAll
z debugPrint
z offset   debugPrint
z capacity debugPrint

-11 4 int array new z z length insertAll
z debugPrint
z offset   debugPrint
z capacity debugPrint

0 0 0 z >> >> >> debugPrint
z offset   debugPrint
z capacity debugPrint
-15 5 int array new z 2 insertAll
z debugPrint
z offset   debugPrint
z capacity debugPrint

"___________________________________" debugPrint
slice debugPrint
3 slice 2 insert
slice debugPrint
5 int newList 1 << 2 << 3 << 4 << 5 << x1 =::
x1 1 4 [:] slice2 =::
slice2 debugPrint
x1 slice2 2 insertAll
slice2 debugPrint

-1 slice2 >> -2 << debugPrint
-3 2 int array new a =::
a slice2 *>> a <<* debugPrint

8 int newList 1 << 2 << 3 << 4 << 5 << x2 =::
x2 1 4 [:] slice3 =::
slice3 debugPrint
slice3 slice3 1 insertAll
slice3 debugPrint
"___________________________________" debugPrint
4 int newList 1 << 2 << 3 << 4 << x3 =::
x3 1 3 [:] slice4 =::
slice4 debugPrint
slice4 slice4 *>> debugPrint
"___________________________________" debugPrint
4 int newList 1 << 2 << 3 << 4 << x4 =::
x4 1 3 [:] slice5 =::
slice5 debugPrint
slice5 slice5 <<* debugPrint
"___________________________________" debugPrint
4 int newList 1 << 2 << 3 << 4 << x5 =::
x5 1 3 [:] slice6 =::
slice6 debugPrint
x5 slice6 *>> debugPrint
"___________________________________" debugPrint
4 int newList 1 << 2 << 3 << 4 << x6 =::
x6 1 3 [:] slice7 =::
slice7 debugPrint
slice7 x6 <<* debugPrint
"___________________________________" debugPrint
4 int newList 1 << 2 << 3 << 4 << x7 =::
x7 1 3 [:] slice8 =::
x7 debugPrint
slice8 x7  *>> debugPrint
"___________________________________" debugPrint
4 int newList 1 << 2 << 3 << 4 << x8 =::
x8 1 3 [:] slice9 =::
x8 debugPrint
x8 slice9 <<* debugPrint
"___________________________________" debugPrint
x8 debugPrint
0 3 int array new x8 2 4 [:]=
x8 debugPrint
"___________________________________" debugPrint
x8 debugPrint
4 int newList -1 << -2 << -3 << x8 1 5 [:]=
x8 debugPrint
"___________________________________" debugPrint
x8 debugPrint
x8 2 3 [:] x8 1 4 [:]=
x8 debugPrint
"___________________________________" debugPrint
x8 4 << 5 << 1 5 [:] slice10 =::
slice10 debugPrint
4 int newList -1 << -2 << -3 << slice10 1 3 [:]=
slice10 debugPrint
"___________________________________" debugPrint
slice10 debugPrint
slice10 slice10 2 4 [:]=
slice10 debugPrint
"___________________________________" debugPrint
x8 debugPrint
x8 offset   debugPrint
x8 capacity debugPrint

slice10 debugPrint
slice10 clear
x8 debugPrint
x8 offset   debugPrint
x8 capacity debugPrint

x8 clear
x8 debugPrint
x8 offset   debugPrint
x8 capacity debugPrint
"___________________________________" debugPrint
x8 0 << 1 << 2 << 3 << 4 << 5 << 6 << 7 << 8 << debugPrint
x8 offset   debugPrint
x8 capacity debugPrint

x8 2 4 clearSlice
x8 debugPrint
x8 offset   debugPrint
x8 capacity debugPrint

x8 2 6 [:] 1 3 clearSlice
x8 debugPrint
x8 offset   debugPrint
x8 capacity debugPrint
"___________________________________" debugPrint
x8 0 remove debugPrint
x8 debugPrint
x8 2 4 [:] 1 remove debugPrint
x8 debugPrint
x8 x8 length 1 - remove debugPrint
x8 debugPrint
"___________________________________" debugPrint
2 x8 1 insert
3 x8 2 insert
0 x8 >> 5 << 6 << 7 << debugPrint
x8 3 7 [:] slice11 =::
slice11 debugPrint
slice11 removeFirst debugPrint
slice11 debugPrint
slice11 removeLast debugPrint
slice11 debugPrint
slice11 popFirst debugPrint
slice11 debugPrint
slice11 popLast debugPrint
slice11 debugPrint
slice11 popFirst debugPrint
slice11 popLast debugPrint
x8 debugPrint
x8 removeFirst debugPrint
x8 debugPrint
x8 removeLast debugPrint
x8 debugPrint
x8 popFirst debugPrint
x8 debugPrint
x8 popLast debugPrint
x8 debugPrint
x8 popFirst debugPrint
x8 popLast debugPrint
"___________________________________" debugPrint
2 string newList "first" << "second" << "third" << "last" << x9 =::
x9 debugPrint
x9 getFirst  debugPrint
x9 peekFirst debugPrint
x9 getLast   debugPrint
x9 peekLast  debugPrint
x9 1 3 [:] slice12 =::
slice12 debugPrint
slice12 getFirst  debugPrint
slice12 peekFirst debugPrint
slice12 getLast   debugPrint
slice12 peekLast  debugPrint
slice12 clear
slice12 debugPrint
slice12 peekFirst debugPrint
slice12 peekLast  debugPrint
x9 clear
x9 debugPrint
x9 peekFirst debugPrint
x9 peekLast  debugPrint
"___________________________________" debugPrint
8 buildUString u"Hello " <<* u"World!" <<* .build debugPrint
"build" buildString "String" <<* .build debugPrint
"___________________________________" debugPrint
arraySlice #include
5 int newList { 0 1 2 3 4 } 1 4 [:] <<* debugPrint



