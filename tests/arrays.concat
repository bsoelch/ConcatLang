test/arrays :

stack #include
valueIO #include
core #import

"Hello" ' ' "World" >> <<* println

"Hello World!" 7 9 [:] println

"Hello World?" dup '!' swap 11 []= println
"Hello World!"  "Programmer" over 6 11 [:]= println
"Hello World!"  "" over 5 11 [:]= println

"Test" dup "A" <<* dup clone "B" <<* println println println
{ "Test" } dup clone! dup clone 0 [] "C" <<* << println println

10 int list new dup println
dup 1000 ensureCap println
( int float int ) type testTuple =$
1 2 3 testTuple new dup println
dup clone  42 over .1 = println
dup       2.0 over .0 = println
.2 println
