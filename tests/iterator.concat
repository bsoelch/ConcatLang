stack #include
iterator #include
valueIO #include
core #import

reverse proc string => string :
  string toReverse =:
  ## store type and length of the list
  toReverse length string new (list) res =:
  ## Iterate though the elements in reverse order
  toReverse ..^ while <^ ?? do
    unwrap res swap :<< res =
  end drop drop
  res return
end

"Hello World" reverse println

sum proc var list => var :
  0 var tmp =: ## Initialize sum to 0
  ## Iterate though all elements of the list
  ^.. while ^> ?? do unwrap
    tmp swap + tmp =
  end drop drop
  tmp ## load the total sum onto the stack
end

{ 1 2 3 4 5 6 7 8 9 } sum println
{ 1.5 2.5 3.5 4.5   } sum println

"Hello" ^..
while ^> ?? do
 unwrap println
end drop drop ## iterator and optional