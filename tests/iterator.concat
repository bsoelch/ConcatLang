test/iterator :

stack #include
iterator #include
valueIO #include
core #import

reverse proc( string => string ){
  string toReverse =:
  ## store type and length of the list
  toReverse .length string new res =::
  ## Iterate though the elements in reverse order
  toReverse _^ while{ <^ }do{
    byte cast res swap << res =
  } drop
  res return
}

"Hello World" reverse println

sum proc( float list => float ){
  0 float tmp =: ## Initialize sum to 0
  ## Iterate though all elements of the list
  ^_ while{ ^> }do{
    float cast tmp swap + tmp =
  } drop
  tmp ## load the total sum onto the stack
}

{ 1 2 3 4 5 6 7 8 9 } sum println
{ 1.5 2.5 3.5 4.5   } sum println

"Hello" ^_
while{ ^> }do{
  println
} drop ## iterator and optional