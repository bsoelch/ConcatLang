lib/consumer:

core #namespace
stack #include

ArrayBuilder public trait{ A <>
  (              A ArrayBuilder mut? => uint )              :length
  ( A            A ArrayBuilder mut => A ArrayBuilder mut ) :append
  ( A array mut? A ArrayBuilder mut => A ArrayBuilder mut ) :appendAll
  ( A            A ArrayBuilder mut => A ArrayBuilder mut ) :prepend
  ( A array mut? A ArrayBuilder mut => A ArrayBuilder mut ) :prependAll
  (              A ArrayBuilder mut => A array )            :build
  ( uint         A ArrayBuilder mut => )                    :ensureCap
  (              A ArrayBuilder mut => )                    :clear
}
byte      ArrayBuilder mut  type  StringBuilder public mut~ =:
codepoint ArrayBuilder mut  type UStringBuilder public mut~ =:

<<  public proc( A <?> A ArrayBuilder mut A => A ArrayBuilder mut ){
  swap .append
}
<<* public proc( A <?> A ArrayBuilder mut A array mut? => A ArrayBuilder mut ){
  swap .appendAll
}
>>  public proc( A <?> A A ArrayBuilder mut => A ArrayBuilder mut ){
  .prepend
}
*>> public proc( A <?> A array mut? A ArrayBuilder mut  => A ArrayBuilder mut ){
  .prependAll
}

#end