lib/io :

io #namespace

type FILE public native =:

FILE stdIn  public native =:
FILE stdOut public native =:
FILE stdErr public native =:

open     public native proc( #+path+# string #+flags+#string => FILE optional ){ }
close    public native proc( FILE => bool ){ }
read     public native proc( FILE #+buff+# byte list #+off+# int #+count+# int => int  ){ }
write    public native proc( FILE #+buff+# byte list #+off+# int #+count+# int => bool ){ }
size     public native proc( FILE => int  ){ }
pos      public native proc( FILE => int  ){ }
truncate public native proc( FILE => bool ){ }
seekEnd  public native proc( FILE => bool ){ }
seek     public native proc( FILE int => bool ){ }

#end
core #namespace

stack #include
io #import
fputs public proc( string FILE => bool ){
  FILE file =:
  string str =:
  file str 0 str .length io .write
}

## specialized procedures for writing to stdout and stderr
 puts public proc( string => ){ io .stdOut core .fputs drop }
eputs public proc( string => ){ io .stdErr core .fputs drop }

#end