proc
  dup float $a float :x
  while x x * a - 1E-16 > :
   a x / x + 2 / !x
  end
  x
end float float 1 1 -> $sqrt

proc
 if dup 1 > :
  dup 1 - fib () swap 2 - fib () +
 elif 1 == :
  1
 else
  0
 end
end int int 1 1 -> $fib

2.0 sqrt () println
3 sqrt () println

0
while dup 5 < :
 dup fib () println
 1 +
end drop

proc 0 != end int bool 1 1 -> $intToBool

3 intToBool () println
0 intToBool () println

2 3 proc + 2.0 / end () println

"Hello" ' ' "World" >>: ++ println